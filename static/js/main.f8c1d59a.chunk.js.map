{"version":3,"sources":["ActionProvider.js","MessageParser.js","components/ComicOptions/comicOptions.js","components/LinkList/LinkList.js","components/ServerList/ServerList.js","config.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ActionProvider","createChatBotMessage","setStateFunc","handleDonaldDuck","message","widget","updateChatbotState","handleMickeyMouse","handleResources","handleEmptyItems","handleKomix","handleVarious","this","setState","greetingMessage","unknowngMessage","prevState","messages","MessageParser","actionProvider","lowerCaseMessage","toLowerCase","test","greet","unknown","ComicOptions","props","optionsMarkup","text","handler","id","map","option","className","key","onClick","LinkList","linkMarkup","options","link","href","url","target","rel","ServerList","useState","data","setData","err","setErr","name","useEffect","axios","get","then","response","catch","error","Object","keys","index","size","icon","faUnlink","config","botName","initialMessages","customStyles","botMessageBox","backgroundColor","chatButton","widgets","widgetName","widgetFunc","Footer","faCoffee","faBook","App","messageParser","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f8c1d59a.chunk.js","sourcesContent":["class ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n    }\r\n    \r\n    greet() {\r\n      const greetingMessage = this.createChatBotMessage(\"Hi, friend 😄 Let me help you find your favourite comic\",\r\n      {\r\n        widget: \"ComicOptions\",\r\n      });\r\n      this.updateChatbotState(greetingMessage)\r\n    }\r\n    unknown(){\r\n      const unknowngMessage = this.createChatBotMessage(\"Sorry I haven't learned this command yet! 😓 Maybe you wanna try one of these options:\",\r\n      {\r\n        widget: \"ComicOptions\",\r\n      });\r\n      this.updateChatbotState(unknowngMessage)\r\n    }\r\n    //Donald Duck handler\r\n    handleDonaldDuck = () => {\r\n      const message = this.createChatBotMessage(\r\n        \"Fantastic, I've got the following resources for you on Donald Duck:\",\r\n        {\r\n          widget: \"Donald Duck\",\r\n        }\r\n      );\r\n  \r\n      this.updateChatbotState(message);\r\n    };\r\n    //Mickey Mouse handler\r\n    handleMickeyMouse = () => {\r\n      const message = this.createChatBotMessage(\r\n        \"Fantastic, I've got the following resources for you on Mickey Mouse:\",\r\n        {\r\n          widget: \"Mickey Mouse\",\r\n        }\r\n      );\r\n  \r\n      this.updateChatbotState(message);\r\n    };\r\n    handleResources = () => {\r\n      const message = this.createChatBotMessage(\r\n        \"Fantastic, I've got the following resources for you on Resources:\",\r\n        {\r\n          widget: \"Resources\",\r\n        }\r\n      );\r\n  \r\n      this.updateChatbotState(message);\r\n    };\r\n    handleEmptyItems = () =>{\r\n      const message = this.createChatBotMessage(\r\n        \"Sorry i got no data for that at the moment 🥺\",\r\n      );\r\n  \r\n      this.updateChatbotState(message);\r\n    }\r\n    handleKomix = () =>{\r\n      const message = this.createChatBotMessage(\r\n        \"Fantastic, I've got the following resources for you on Komix:\",\r\n        {\r\n          widget: \"Komix\",\r\n        }\r\n      );\r\n  \r\n      this.updateChatbotState(message);\r\n    }\r\n    handleVarious = () =>{\r\n      const message = this.createChatBotMessage(\r\n        \"Fantastic, I've got the following resources for you on Various:\",\r\n        {\r\n          widget: \"Various\",\r\n        }\r\n      );\r\n  \r\n      this.updateChatbotState(message);\r\n    }\r\n    updateChatbotState(message) {\r\n  // NOTE: This function is set in the constructor, and is passed in      // from the top level Chatbot component. The setState function here     // actually manipulates the top level state of the Chatbot, so it's     // important that we make sure that we preserve the previous state.\r\n     this.setState(prevState => ({\r\n          ...prevState, messages: [...prevState.messages, message]\r\n      }))\r\n    }\r\n  }\r\n  \r\n  export default ActionProvider","// MessageParser starter code\r\nclass MessageParser {\r\n    constructor(actionProvider) {\r\n      this.actionProvider = actionProvider;\r\n    }\r\n    \r\n    parse(message) {\r\n        const lowerCaseMessage = message.toLowerCase()\r\n\r\n        const testCaseGreet = /hello|hi|γεια|geia|καλημερα|kalhmera|καλησπερα|kalhspera|morning/i;\r\n        const testCaseDonald = /donald|duck|ντοναλντ|ντακ/i;\r\n        const testCaseMickey = /mickey|mouse|μικυ|μαους/i;\r\n        const testCaseKomix = /komix|κομιξ/i;\r\n        const testCaseVarious = /various|διαφορα|diafora/i;\r\n        \r\n        if (testCaseGreet.test(lowerCaseMessage)) {\r\n          this.actionProvider.greet();\r\n        }\r\n        else if(testCaseDonald.test(lowerCaseMessage)){\r\n          this.actionProvider.handleDonaldDuck();\r\n        }\r\n        else if(testCaseMickey.test(lowerCaseMessage)){\r\n          this.actionProvider.handleMickeyMouse();\r\n        }\r\n        else if(testCaseKomix.test(lowerCaseMessage)){\r\n          this.actionProvider.handleKomix();\r\n        }\r\n        else if(testCaseVarious.test(lowerCaseMessage)){\r\n          this.actionProvider.handleVarious();\r\n        }\r\n          else{\r\n          this.actionProvider.unknown();\r\n        }\r\n      }\r\n    }\r\n  \r\n  export default MessageParser;","import React from \"react\";\r\n\r\nimport \"./comicOptions.css\";\r\n\r\nconst ComicOptions = (props) => {\r\n  const options = [\r\n    {\r\n      text: \"Donald Duck\",\r\n      handler: props.actionProvider.handleDonaldDuck,\r\n      id: 1,\r\n    },\r\n    {\r\n      text: \"Micky Mouse\",\r\n      handler: props.actionProvider.handleMickeyMouse,\r\n      id: 2,\r\n    },\r\n    {\r\n      text: \"Komix\",\r\n      handler: props.actionProvider.handleKomix,\r\n      id: 3,\r\n    },\r\n    {\r\n      text: \"Various\",\r\n      handler: props.actionProvider.handleVarious,\r\n      id: 4,\r\n    },\r\n    // {\r\n    //   text: \"Resources\",\r\n    //   handler: props.actionProvider.handleResources,\r\n    //   id: 5,\r\n    // }\r\n  ];\r\n\r\n  const optionsMarkup = options.map((option) => (\r\n    <button\r\n      className=\"Comic-option-button\"\r\n      key={option.id}\r\n      onClick={option.handler}\r\n    >\r\n      {option.text}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"Comic-options-container\">{optionsMarkup}</div>;\r\n};\r\n\r\nexport default ComicOptions;","import React from \"react\";\r\n\r\nimport \"./LinkList.css\";\r\n\r\nconst LinkList = (props) => {\r\n  const linkMarkup = props.options.map((link) => (\r\n    <li key={link.id} className=\"link-list-item\">\r\n      <a\r\n        href={link.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"link-list-item-url\"\r\n      >\r\n        {link.text}\r\n      </a>\r\n    </li>\r\n  ));\r\n\r\n  return <ul className=\"link-list\">{linkMarkup}</ul>;\r\n};\r\n\r\nexport default LinkList;","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUnlink } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from \"axios\";\r\nimport \"./ServerList.css\";\r\n\r\n\r\nconst ServerList = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(null);\r\n  const url = props.name;\r\n  \r\n  useEffect(() => {\r\n    axios.get(`https://comic-bot-fe2f1.firebaseio.com/${url}.json`).then(response => {\r\n\r\n      setData(response.data);\r\n\r\n    }).catch(error => {\r\n      setErr(\"Woops something went wrong on our end! I'm brewing some coffee and calling the master to fix it.\");\r\n    });\r\n\r\n  }, []);\r\n\r\n  return (\r\n    err ?\r\n      <ul className=\"link-list\"> <li className=\"link-list-item err\">{err}</li></ul>\r\n      :\r\n      <ul className=\"link-list\">\r\n        {Object.keys(data).map(function (key, index) {\r\n\r\n          return (\r\n            <li className=\"link-list-item\" key={key}>\r\n              <a\r\n                href={data[key]}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"link-list-item-url\">\r\n                {key}\r\n                <a className=\"test\" href=\"/\"><FontAwesomeIcon size=\"xs\" icon={faUnlink} /></a>\r\n              </a>\r\n              \r\n            </li>\r\n          );\r\n        })}\r\n </ul>\r\n  );\r\n};\r\n\r\nexport default ServerList;","import React from 'react';\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\nimport ComicOptions from './components/ComicOptions/comicOptions.js';\r\nimport LinkList from './components/LinkList/LinkList';\r\nimport ServerList from './components/ServerList/ServerList';\r\n\r\nconst config = {\r\n  botName: \"ComicBot\",\r\n  initialMessages: [\r\n      createChatBotMessage(`Hello I'm ComicBot 🧙 I'm here to help you find your favourite Disney comics 📚`\r\n  , {\r\n    widget: \"ComicOptions\",\r\n  }),\r\n],\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: \"#376B7E\",\r\n    },\r\n    chatButton: {\r\n      backgroundColor: \"#376B7E\",\r\n    },\r\n  },\r\n widgets: [\r\n     {\r\n     \twidgetName: \"ComicOptions\",\r\n    \twidgetFunc: (props) => <ComicOptions {...props} />,\r\n     },\r\n     {\r\n      widgetName: \"Donald Duck\",\r\n      widgetFunc: (props) => <ServerList {...props} />,\r\n      props: {\r\n        name: \"DonaldDuck\"\r\n      }\r\n    },\r\n    {\r\n      widgetName: \"Resources\",\r\n      widgetFunc: (props) => <LinkList {...props} />,\r\n      props: {\r\n        options: [\r\n          {\r\n            text: \"Facebook Fan Page\",\r\n            url:\r\n              \"https://www.facebook.com/groups/grcomicpdf/\"\r\n            \r\n          },\r\n          {\r\n            text: \"Smilefreeware\",\r\n            url: \"http://users.sch.gr/vasanagno/comics.html\"\r\n          }\r\n        ]\r\n      }\r\n      \r\n    },\r\n    {\r\n      widgetName: \"Mickey Mouse\",\r\n      widgetFunc: (props) => <ServerList {...props}/>,\r\n      props: { name: \"MickeyMouse\"}\r\n    },\r\n    {\r\n      widgetName: \"Komix\",\r\n      widgetFunc: (props) => <ServerList {...props}/>,\r\n      props: { name: \"Komix\"}\r\n    },\r\n    {\r\n      widgetName: \"Various\",\r\n      widgetFunc: (props) => <ServerList {...props}/>,\r\n      props: { name: \"Various\"}\r\n    },\r\n ]\r\n}\r\n\r\nexport default config","import React from 'react';\r\nimport './Footer.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {  faCoffee, faBook } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Footer = () => (\r\n    \r\n            <div className = 'footer'>Made with <FontAwesomeIcon icon= {faCoffee}  /> and passion for comics <FontAwesomeIcon icon= {faBook}  /> <a href=\"https://github.com/NikosPaschalis\">by Nikos Paschalis</a> </div> \r\n            \r\n            \r\n\r\n\r\n)\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Chatbot from 'react-chatbot-kit';\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport config from './config';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n      <header className=\"App-header\">\n      \n      <Chatbot config={config} actionProvider={ActionProvider} messageParser={MessageParser} />\n      </header>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}